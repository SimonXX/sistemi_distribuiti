{"version":3,"file":"angular-split.mjs","sources":["../../../projects/angular-split/src/lib/utils.ts","../../../projects/angular-split/src/lib/angular-split-config.token.ts","../../../projects/angular-split/src/lib/gutter/split-gutter.directive.ts","../../../projects/angular-split/src/lib/gutter/gutter-num-token.ts","../../../projects/angular-split/src/lib/gutter/split-gutter-dynamic-injector.directive.ts","../../../projects/angular-split/src/lib/component/split.component.ts","../../../projects/angular-split/src/lib/directive/split-area.directive.ts","../../../projects/angular-split/src/lib/gutter/split-gutter-drag-handle.directive.ts","../../../projects/angular-split/src/lib/gutter/split-gutter-exclude-from-drag.directive.ts","../../../projects/angular-split/src/lib/module.ts","../../../projects/angular-split/src/public_api.ts","../../../projects/angular-split/src/angular-split.ts"],"sourcesContent":["import { ElementRef } from '@angular/core'\nimport {\n  IArea,\n  IAreaAbsorptionCapacity,\n  IAreaSize,\n  IAreaSnapshot,\n  IPoint,\n  ISplitDirection,\n  ISplitSideAbsorptionCapacity,\n  ISplitUnit,\n} from './interface'\n\nexport function getPointFromEvent(event: MouseEvent | TouchEvent | KeyboardEvent): IPoint {\n  // TouchEvent\n  if ((<TouchEvent>event).changedTouches !== undefined && (<TouchEvent>event).changedTouches.length > 0) {\n    return {\n      x: (<TouchEvent>event).changedTouches[0].clientX,\n      y: (<TouchEvent>event).changedTouches[0].clientY,\n    }\n  }\n  // MouseEvent\n  else if ((<MouseEvent>event).clientX !== undefined && (<MouseEvent>event).clientY !== undefined) {\n    return {\n      x: (<MouseEvent>event).clientX,\n      y: (<MouseEvent>event).clientY,\n    }\n  }\n  // KeyboardEvent\n  else if ((<KeyboardEvent>event).currentTarget !== undefined) {\n    const gutterEl = event.currentTarget as HTMLElement\n    return {\n      x: gutterEl.offsetLeft,\n      y: gutterEl.offsetTop,\n    }\n  }\n  return null\n}\n\nexport function pointDeltaEquals(lhs: IPoint, rhs: IPoint, deltaPx: number) {\n  return Math.abs(lhs.x - rhs.x) <= deltaPx && Math.abs(lhs.y - rhs.y) <= deltaPx\n}\n\nexport function getKeyboardEndpoint(event: KeyboardEvent, direction: ISplitDirection): IPoint | null {\n  // Return null if direction keys on the opposite axis were pressed\n  if (direction === 'horizontal') {\n    switch (event.key) {\n      case 'ArrowLeft':\n      case 'ArrowRight':\n      case 'PageUp':\n      case 'PageDown':\n        break\n      default:\n        return null\n    }\n  }\n  if (direction === 'vertical') {\n    switch (event.key) {\n      case 'ArrowUp':\n      case 'ArrowDown':\n      case 'PageUp':\n      case 'PageDown':\n        break\n      default:\n        return null\n    }\n  }\n\n  const gutterEl = event.currentTarget as HTMLElement\n  const offset = event.key === 'PageUp' || event.key === 'PageDown' ? 50 * 10 : 50\n  let offsetX = gutterEl.offsetLeft,\n    offsetY = gutterEl.offsetTop\n  switch (event.key) {\n    case 'ArrowLeft':\n      offsetX -= offset\n      break\n    case 'ArrowRight':\n      offsetX += offset\n      break\n    case 'ArrowUp':\n      offsetY -= offset\n      break\n    case 'ArrowDown':\n      offsetY += offset\n      break\n    case 'PageUp':\n      if (direction === 'vertical') {\n        offsetY -= offset\n      } else {\n        offsetX += offset\n      }\n      break\n    case 'PageDown':\n      if (direction === 'vertical') {\n        offsetY += offset\n      } else {\n        offsetX -= offset\n      }\n      break\n    default:\n      return null\n  }\n\n  return {\n    x: offsetX,\n    y: offsetY,\n  }\n}\n\nexport function getElementPixelSize(elRef: ElementRef, direction: ISplitDirection): number {\n  const rect = (<HTMLElement>elRef.nativeElement).getBoundingClientRect()\n\n  return direction === 'horizontal' ? rect.width : rect.height\n}\n\nexport function getInputBoolean(v: boolean | `${boolean}`): boolean {\n  return typeof v === 'boolean' ? v : v !== 'false'\n}\n\nexport function getInputPositiveNumber<T>(v: number | `${number}` | '*', defaultValue: T): number | T {\n  if (v === null || v === undefined) return defaultValue\n\n  v = Number(v)\n  return !isNaN(v) && v >= 0 ? v : defaultValue\n}\n\nexport function isUserSizesValid(unit: ISplitUnit, sizes: Array<IAreaSize>): boolean {\n  // All sizes total must be 100 unless there are wildcards.\n  // While having wildcards all other sizes sum should be less than 100.\n  // There should be maximum one wildcard.\n  if (unit === 'percent') {\n    const total = sizes.reduce<number>((total, s) => (s !== '*' ? total + s : total), 0)\n    const wildcardSizeAreas = sizes.filter((size) => size === '*')\n\n    if (wildcardSizeAreas.length > 1) {\n      return false\n    }\n\n    if (wildcardSizeAreas.length === 1) {\n      return total < 100.1\n    }\n\n    return total > 99.9 && total < 100.1\n  }\n\n  // A size at null is mandatory but only one.\n  if (unit === 'pixel') {\n    return sizes.filter((s) => s === '*').length === 1\n  }\n}\n\nexport function getAreaMinSize(a: IArea): number | null {\n  if (a.size === '*') {\n    return null\n  }\n\n  if (a.component.lockSize === true) {\n    return a.size\n  }\n\n  if (a.component.minSize === null) {\n    return null\n  }\n\n  return a.component.minSize\n}\n\nexport function getAreaMaxSize(a: IArea): number | null {\n  if (a.size === '*') {\n    return null\n  }\n\n  if (a.component.lockSize === true) {\n    return a.size\n  }\n\n  if (a.component.maxSize === null) {\n    return null\n  }\n\n  if (a.component.maxSize < a.size) {\n    return a.size\n  }\n\n  return a.component.maxSize\n}\n\nexport function getGutterSideAbsorptionCapacity(\n  unit: ISplitUnit,\n  sideAreas: Array<IAreaSnapshot>,\n  pixels: number,\n  allAreasSizePixel: number,\n): ISplitSideAbsorptionCapacity {\n  return sideAreas.reduce<ISplitSideAbsorptionCapacity>(\n    (acc, area) => {\n      const res = getAreaAbsorptionCapacity(unit, area, acc.remain, allAreasSizePixel)\n      acc.list.push(res)\n      acc.remain = res.pixelRemain\n      return acc\n    },\n    { remain: pixels, list: [] },\n  )\n}\n\nfunction getAreaAbsorptionCapacity(\n  unit: ISplitUnit,\n  areaSnapshot: IAreaSnapshot,\n  pixels: number,\n  allAreasSizePixel: number,\n): IAreaAbsorptionCapacity {\n  // No pain no gain\n  if (pixels === 0) {\n    return {\n      areaSnapshot,\n      pixelAbsorb: 0,\n      percentAfterAbsorption: areaSnapshot.sizePercentAtStart,\n      pixelRemain: 0,\n    }\n  }\n\n  // Area start at zero and need to be reduced, not possible\n  if (areaSnapshot.sizePixelAtStart === 0 && pixels < 0) {\n    return {\n      areaSnapshot,\n      pixelAbsorb: 0,\n      percentAfterAbsorption: 0,\n      pixelRemain: pixels,\n    }\n  }\n\n  if (unit === 'percent') {\n    return getAreaAbsorptionCapacityPercent(areaSnapshot, pixels, allAreasSizePixel)\n  }\n\n  if (unit === 'pixel') {\n    return getAreaAbsorptionCapacityPixel(areaSnapshot, pixels)\n  }\n}\n\nfunction getAreaAbsorptionCapacityPercent(\n  areaSnapshot: IAreaSnapshot,\n  pixels: number,\n  allAreasSizePixel: number,\n): IAreaAbsorptionCapacity {\n  const tempPixelSize = areaSnapshot.sizePixelAtStart + pixels\n  const tempPercentSize = (tempPixelSize / allAreasSizePixel) * 100\n\n  // ENLARGE AREA\n\n  if (pixels > 0) {\n    // If maxSize & newSize bigger than it > absorb to max and return remaining pixels\n    if (areaSnapshot.area.maxSize !== null && tempPercentSize > areaSnapshot.area.maxSize) {\n      // Use area.area.maxSize as newPercentSize and return calculate pixels remaining\n      const maxSizePixel = (areaSnapshot.area.maxSize / 100) * allAreasSizePixel\n      return {\n        areaSnapshot,\n        pixelAbsorb: maxSizePixel,\n        percentAfterAbsorption: areaSnapshot.area.maxSize,\n        pixelRemain: areaSnapshot.sizePixelAtStart + pixels - maxSizePixel,\n      }\n    }\n    return {\n      areaSnapshot,\n      pixelAbsorb: pixels,\n      percentAfterAbsorption: tempPercentSize > 100 ? 100 : tempPercentSize,\n      pixelRemain: 0,\n    }\n  }\n\n  // REDUCE AREA\n  else if (pixels < 0) {\n    // If minSize & newSize smaller than it > absorb to min and return remaining pixels\n    if (areaSnapshot.area.minSize !== null && tempPercentSize < areaSnapshot.area.minSize) {\n      // Use area.area.minSize as newPercentSize and return calculate pixels remaining\n      const minSizePixel = (areaSnapshot.area.minSize / 100) * allAreasSizePixel\n      return {\n        areaSnapshot,\n        pixelAbsorb: minSizePixel,\n        percentAfterAbsorption: areaSnapshot.area.minSize,\n        pixelRemain: areaSnapshot.sizePixelAtStart + pixels - minSizePixel,\n      }\n    }\n    // If reduced under zero > return remaining pixels\n    else if (tempPercentSize < 0) {\n      // Use 0 as newPercentSize and return calculate pixels remaining\n      return {\n        areaSnapshot,\n        pixelAbsorb: -areaSnapshot.sizePixelAtStart,\n        percentAfterAbsorption: 0,\n        pixelRemain: pixels + areaSnapshot.sizePixelAtStart,\n      }\n    }\n    return {\n      areaSnapshot,\n      pixelAbsorb: pixels,\n      percentAfterAbsorption: tempPercentSize,\n      pixelRemain: 0,\n    }\n  }\n}\n\nfunction getAreaAbsorptionCapacityPixel(areaSnapshot: IAreaSnapshot, pixels: number): IAreaAbsorptionCapacity {\n  const tempPixelSize = areaSnapshot.sizePixelAtStart + pixels\n\n  // ENLARGE AREA\n\n  if (pixels > 0) {\n    // If maxSize & newSize bigger than it > absorb to max and return remaining pixels\n    if (areaSnapshot.area.maxSize !== null && tempPixelSize > areaSnapshot.area.maxSize) {\n      return {\n        areaSnapshot,\n        pixelAbsorb: areaSnapshot.area.maxSize - areaSnapshot.sizePixelAtStart,\n        percentAfterAbsorption: -1,\n        pixelRemain: tempPixelSize - areaSnapshot.area.maxSize,\n      }\n    }\n    return {\n      areaSnapshot,\n      pixelAbsorb: pixels,\n      percentAfterAbsorption: -1,\n      pixelRemain: 0,\n    }\n  }\n\n  // REDUCE AREA\n  else if (pixels < 0) {\n    // If minSize & newSize smaller than it > absorb to min and return remaining pixels\n    if (areaSnapshot.area.minSize !== null && tempPixelSize < areaSnapshot.area.minSize) {\n      return {\n        areaSnapshot,\n        pixelAbsorb: areaSnapshot.area.minSize + pixels - tempPixelSize,\n        percentAfterAbsorption: -1,\n        pixelRemain: tempPixelSize - areaSnapshot.area.minSize,\n      }\n    }\n    // If reduced under zero > return remaining pixels\n    else if (tempPixelSize < 0) {\n      return {\n        areaSnapshot,\n        pixelAbsorb: -areaSnapshot.sizePixelAtStart,\n        percentAfterAbsorption: -1,\n        pixelRemain: pixels + areaSnapshot.sizePixelAtStart,\n      }\n    }\n    return {\n      areaSnapshot,\n      pixelAbsorb: pixels,\n      percentAfterAbsorption: -1,\n      pixelRemain: 0,\n    }\n  }\n}\n\nexport function updateAreaSize(unit: ISplitUnit, item: IAreaAbsorptionCapacity) {\n  // Update size except for the wildcard size area\n  if (item.areaSnapshot.area.size !== '*') {\n    if (unit === 'percent') {\n      item.areaSnapshot.area.size = item.percentAfterAbsorption\n    } else if (unit === 'pixel') {\n      item.areaSnapshot.area.size = item.areaSnapshot.sizePixelAtStart + item.pixelAbsorb\n    }\n  }\n}\n","import { InjectionToken } from '@angular/core'\nimport { IDefaultOptions } from './interface'\n\nexport const ANGULAR_SPLIT_DEFAULT_OPTIONS = new InjectionToken<Partial<IDefaultOptions>>('angular-split-global-config')\n","import { Directive, ElementRef, TemplateRef } from '@angular/core'\nimport { IArea } from '../interface'\n\nexport interface SplitGutterTemplateContext {\n  /**\n   * The area before the gutter.\n   * In RTL the right area and in LTR the left area\n   */\n  areaBefore: IArea\n  /**\n   * The area after the gutter.\n   * In RTL the left area and in LTR the right area\n   */\n  areaAfter: IArea\n  /**\n   * The absolute number of the gutter based on direction (RTL and LTR).\n   * First gutter is 1, second is 2, etc...\n   */\n  gutterNum: number\n  /**\n   * Whether this is the first gutter.\n   * In RTL the most right area and in LTR the most left area\n   */\n  first: boolean\n  /**\n   * Whether this is the last gutter.\n   * In RTL the most left area and in LTR the most right area\n   */\n  last: boolean\n  /**\n   * Whether the gutter is being dragged now\n   */\n  isDragged: boolean\n}\n\n@Directive({\n  selector: '[asSplitGutter]',\n})\nexport class SplitGutterDirective {\n  /**\n   * The map holds reference to the drag handle elements inside instances\n   * of the provided template.\n   */\n  gutterToHandleElementMap = new Map<number, ElementRef<HTMLElement>[]>()\n  /**\n   * The map holds reference to the excluded drag elements inside instances\n   * of the provided template.\n   */\n  gutterToExcludeDragElementMap = new Map<number, ElementRef<HTMLElement>[]>()\n\n  constructor(public template: TemplateRef<SplitGutterTemplateContext>) {}\n\n  canStartDragging(originElement: HTMLElement, gutterNum: number) {\n    if (this.gutterToExcludeDragElementMap.has(gutterNum)) {\n      const isInsideExclude = this.gutterToExcludeDragElementMap\n        .get(gutterNum)\n        .some((gutterExcludeElement) => gutterExcludeElement.nativeElement.contains(originElement))\n\n      if (isInsideExclude) {\n        return false\n      }\n    }\n\n    if (this.gutterToHandleElementMap.has(gutterNum)) {\n      return this.gutterToHandleElementMap\n        .get(gutterNum)\n        .some((gutterHandleElement) => gutterHandleElement.nativeElement.contains(originElement))\n    }\n\n    return true\n  }\n\n  addToMap(map: Map<number, ElementRef<HTMLElement>[]>, gutterNum: number, elementRef: ElementRef<HTMLElement>) {\n    if (map.has(gutterNum)) {\n      map.get(gutterNum).push(elementRef)\n    } else {\n      map.set(gutterNum, [elementRef])\n    }\n  }\n\n  removedFromMap(\n    map: Map<number, ElementRef<HTMLElement>[]>,\n    gutterNum: number,\n    elementRef: ElementRef<HTMLElement>,\n  ) {\n    const elements = map.get(gutterNum)\n    elements.splice(elements.indexOf(elementRef), 1)\n\n    if (elements.length === 0) {\n      map.delete(gutterNum)\n    }\n  }\n\n  static ngTemplateContextGuard(dir: SplitGutterDirective, ctx: unknown): ctx is SplitGutterTemplateContext {\n    return true\n  }\n}\n","import { InjectionToken } from '@angular/core'\n\n/**\n * Identifies the gutter by number through DI\n * to allow SplitGutterDragHandleDirective and SplitGutterExcludeFromDragDirective to know\n * the gutter template context without inputs\n */\nexport const GUTTER_NUM_TOKEN = new InjectionToken<number>('Gutter num')\n","import { Injector, Directive, Input, ViewContainerRef, TemplateRef } from '@angular/core'\nimport { GUTTER_NUM_TOKEN } from './gutter-num-token'\n\ninterface SplitGutterDynamicInjectorTemplateContext {\n  $implicit: Injector\n}\n\n/**\n * This directive allows creating a dynamic injector inside ngFor\n * with dynamic gutter num and expose the injector for ngTemplateOutlet usage\n */\n@Directive({\n  selector: '[asSplitGutterDynamicInjector]',\n})\nexport class SplitGutterDynamicInjectorDirective {\n  @Input('asSplitGutterDynamicInjector')\n  set gutterNum(value: number) {\n    this.vcr.clear()\n\n    const injector = Injector.create({\n      providers: [\n        {\n          provide: GUTTER_NUM_TOKEN,\n          useValue: value,\n        },\n      ],\n      parent: this.vcr.injector,\n    })\n\n    this.vcr.createEmbeddedView(this.templateRef, { $implicit: injector })\n  }\n\n  constructor(\n    private vcr: ViewContainerRef,\n    private templateRef: TemplateRef<SplitGutterDynamicInjectorTemplateContext>,\n  ) {}\n\n  static ngTemplateContextGuard(\n    dir: SplitGutterDynamicInjectorDirective,\n    ctx: unknown,\n  ): ctx is SplitGutterDynamicInjectorTemplateContext {\n    return true\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Renderer2,\n  AfterViewInit,\n  OnDestroy,\n  ElementRef,\n  NgZone,\n  ViewChildren,\n  QueryList,\n  EventEmitter,\n  ViewEncapsulation,\n  Inject,\n  Optional,\n  ContentChild,\n} from '@angular/core'\nimport { Observable, Subscriber, Subject } from 'rxjs'\nimport { debounceTime } from 'rxjs/operators'\nimport {\n  IArea,\n  IPoint,\n  ISplitSnapshot,\n  IAreaSnapshot,\n  IOutputData,\n  IOutputAreaSizes,\n  IDefaultOptions,\n  IAreaSize,\n  ISplitDirection,\n  ISplitDir,\n  ISplitUnit,\n} from '../interface'\nimport { SplitAreaDirective } from '../directive/split-area.directive'\nimport {\n  getInputPositiveNumber,\n  getInputBoolean,\n  getAreaMinSize,\n  getAreaMaxSize,\n  getPointFromEvent,\n  getElementPixelSize,\n  getGutterSideAbsorptionCapacity,\n  isUserSizesValid,\n  pointDeltaEquals,\n  updateAreaSize,\n  getKeyboardEndpoint,\n} from '../utils'\nimport { ANGULAR_SPLIT_DEFAULT_OPTIONS } from '../angular-split-config.token'\nimport { SplitGutterDirective } from '../gutter/split-gutter.directive'\n\n/**\n * angular-split\n *\n *\n *  PERCENT MODE ([unit]=\"'percent'\")\n *  ___________________________________________________________________________________________\n * |       A       [g1]       B       [g2]       C       [g3]       D       [g4]       E       |\n * |-------------------------------------------------------------------------------------------|\n * |       20                 30                 20                 15                 15      | <-- [size]=\"x\"\n * |               10px               10px               10px               10px               | <-- [gutterSize]=\"10\"\n * |calc(20% - 8px)    calc(30% - 12px)   calc(20% - 8px)    calc(15% - 6px)    calc(15% - 6px)| <-- CSS flex-basis property (with flex-grow&shrink at 0)\n * |     152px              228px              152px              114px              114px     | <-- el.getBoundingClientRect().width\n * |___________________________________________________________________________________________|\n *                                                                                 800px         <-- el.getBoundingClientRect().width\n *  flex-basis = calc( { area.size }% - { area.size/100 * nbGutter*gutterSize }px );\n *\n *\n *  PIXEL MODE ([unit]=\"'pixel'\")\n *  ___________________________________________________________________________________________\n * |       A       [g1]       B       [g2]       C       [g3]       D       [g4]       E       |\n * |-------------------------------------------------------------------------------------------|\n * |      100                250                 *                 150                100      | <-- [size]=\"y\"\n * |               10px               10px               10px               10px               | <-- [gutterSize]=\"10\"\n * |   0 0 100px          0 0 250px           1 1 auto          0 0 150px          0 0 100px   | <-- CSS flex property (flex-grow/flex-shrink/flex-basis)\n * |     100px              250px              200px              150px              100px     | <-- el.getBoundingClientRect().width\n * |___________________________________________________________________________________________|\n *                                                                                 800px         <-- el.getBoundingClientRect().width\n *\n */\n\n@Component({\n  selector: 'as-split',\n  exportAs: 'asSplit',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: [`./split.component.scss`],\n  template: ` <ng-content></ng-content>\n    <ng-template\n      ngFor\n      [ngForOf]=\"displayedAreas\"\n      let-area=\"$implicit\"\n      let-index=\"index\"\n      let-first=\"first\"\n      let-last=\"last\"\n    >\n      <div\n        role=\"separator\"\n        tabindex=\"0\"\n        *ngIf=\"last === false\"\n        #gutterEls\n        class=\"as-split-gutter\"\n        [class.as-dragged]=\"draggedGutterNum === index + 1\"\n        [style.flex-basis.px]=\"gutterSize\"\n        [style.order]=\"index * 2 + 1\"\n        (keydown)=\"startKeyboardDrag($event, index * 2 + 1, index + 1)\"\n        (mousedown)=\"startMouseDrag($event, index * 2 + 1, index + 1)\"\n        (touchstart)=\"startMouseDrag($event, index * 2 + 1, index + 1)\"\n        (mouseup)=\"clickGutter($event, index + 1)\"\n        (touchend)=\"clickGutter($event, index + 1)\"\n        [attr.aria-label]=\"gutterAriaLabel\"\n        [attr.aria-orientation]=\"direction\"\n        [attr.aria-valuemin]=\"area.minSize\"\n        [attr.aria-valuemax]=\"area.maxSize\"\n        [attr.aria-valuenow]=\"area.size === '*' ? null : area.size\"\n        [attr.aria-valuetext]=\"getAriaAreaSizeText(area.size)\"\n      >\n        <ng-container *ngIf=\"customGutter?.template; else defaultGutterTpl\">\n          <ng-container *asSplitGutterDynamicInjector=\"index + 1; let injector\">\n            <ng-container\n              *ngTemplateOutlet=\"\n                customGutter.template;\n                context: {\n                  areaBefore: area,\n                  areaAfter: displayedAreas[index + 1],\n                  gutterNum: index + 1,\n                  first,\n                  last: index === displayedAreas.length - 2,\n                  isDragged: draggedGutterNum === index + 1\n                };\n                injector: injector\n              \"\n            ></ng-container>\n          </ng-container>\n        </ng-container>\n        <ng-template #defaultGutterTpl>\n          <div class=\"as-split-gutter-icon\"></div>\n        </ng-template>\n      </div>\n    </ng-template>`,\n  encapsulation: ViewEncapsulation.Emulated,\n})\nexport class SplitComponent implements AfterViewInit, OnDestroy {\n  @ContentChild(SplitGutterDirective) customGutter: SplitGutterDirective\n  @Input() set direction(v: ISplitDirection) {\n    this._direction = v === 'vertical' ? 'vertical' : 'horizontal'\n\n    this.renderer.addClass(this.elRef.nativeElement, `as-${this._direction}`)\n    this.renderer.removeClass(\n      this.elRef.nativeElement,\n      `as-${this._direction === 'vertical' ? 'horizontal' : 'vertical'}`,\n    )\n\n    this.build(false, false)\n  }\n\n  get direction(): ISplitDirection {\n    return this._direction\n  }\n\n  @Input() set unit(v: ISplitUnit) {\n    this._unit = v === 'pixel' ? 'pixel' : 'percent'\n\n    this.renderer.addClass(this.elRef.nativeElement, `as-${this._unit}`)\n    this.renderer.removeClass(this.elRef.nativeElement, `as-${this._unit === 'pixel' ? 'percent' : 'pixel'}`)\n\n    this.build(false, true)\n  }\n\n  get unit(): ISplitUnit {\n    return this._unit\n  }\n\n  @Input() set gutterSize(v: number | `${number}` | null | undefined) {\n    this._gutterSize = getInputPositiveNumber(v, 11)\n\n    this.build(false, false)\n  }\n\n  get gutterSize(): number {\n    return this._gutterSize\n  }\n\n  @Input() set gutterStep(v: number | `${number}`) {\n    this._gutterStep = getInputPositiveNumber(v, 1)\n  }\n\n  get gutterStep(): number {\n    return this._gutterStep\n  }\n\n  @Input() set restrictMove(v: boolean | `${boolean}`) {\n    this._restrictMove = getInputBoolean(v)\n  }\n\n  get restrictMove(): boolean {\n    return this._restrictMove\n  }\n\n  @Input() set useTransition(v: boolean | `${boolean}`) {\n    this._useTransition = getInputBoolean(v)\n\n    if (this._useTransition) {\n      this.renderer.addClass(this.elRef.nativeElement, 'as-transition')\n    } else {\n      this.renderer.removeClass(this.elRef.nativeElement, 'as-transition')\n    }\n  }\n\n  get useTransition(): boolean {\n    return this._useTransition\n  }\n\n  @Input() set disabled(v: boolean | `${boolean}`) {\n    this._disabled = getInputBoolean(v)\n\n    if (this._disabled) {\n      this.renderer.addClass(this.elRef.nativeElement, 'as-disabled')\n    } else {\n      this.renderer.removeClass(this.elRef.nativeElement, 'as-disabled')\n    }\n  }\n\n  get disabled(): boolean {\n    return this._disabled\n  }\n\n  @Input() set dir(v: ISplitDir) {\n    this._dir = v === 'rtl' ? 'rtl' : 'ltr'\n\n    this.renderer.setAttribute(this.elRef.nativeElement, 'dir', this._dir)\n  }\n\n  get dir(): ISplitDir {\n    return this._dir\n  }\n\n  @Input() set gutterDblClickDuration(v: number | `${number}`) {\n    this._gutterDblClickDuration = getInputPositiveNumber(v, 0)\n  }\n\n  @Input() gutterClickDeltaPx = 2\n\n  @Input() gutterAriaLabel: string\n\n  get gutterDblClickDuration(): number {\n    return this._gutterDblClickDuration\n  }\n  @Output() get transitionEnd(): Observable<IOutputAreaSizes> {\n    return new Observable<IOutputAreaSizes>(\n      (subscriber: Subscriber<IOutputAreaSizes>) => (this.transitionEndSubscriber = subscriber),\n    ).pipe(debounceTime<IOutputAreaSizes>(20))\n  }\n\n  private _config: IDefaultOptions = {\n    direction: 'horizontal',\n    unit: 'percent',\n    gutterSize: 11,\n    gutterStep: 1,\n    restrictMove: false,\n    useTransition: false,\n    disabled: false,\n    dir: 'ltr',\n    gutterDblClickDuration: 0,\n  }\n\n  constructor(\n    private ngZone: NgZone,\n    private elRef: ElementRef,\n    private cdRef: ChangeDetectorRef,\n    private renderer: Renderer2,\n    @Optional() @Inject(ANGULAR_SPLIT_DEFAULT_OPTIONS) globalConfig: IDefaultOptions,\n  ) {\n    // To force adding default class, could be override by user @Input() or not\n    this.direction = this._direction\n    this._config = globalConfig ? Object.assign(this._config, globalConfig) : this._config\n    Object.keys(this._config).forEach((property) => {\n      this[property] = this._config[property]\n    })\n  }\n  private _direction: ISplitDirection\n\n  private _unit: ISplitUnit\n\n  private _gutterSize: number\n\n  private _gutterStep: number\n\n  private _restrictMove: boolean\n\n  private _useTransition: boolean\n\n  private _disabled: boolean\n\n  private _dir: ISplitDir\n\n  private _gutterDblClickDuration: number\n\n  @Output() dragStart = new EventEmitter<IOutputData>(false)\n  @Output() dragEnd = new EventEmitter<IOutputData>(false)\n  @Output() gutterClick = new EventEmitter<IOutputData>(false)\n  @Output() gutterDblClick = new EventEmitter<IOutputData>(false)\n\n  private transitionEndSubscriber: Subscriber<IOutputAreaSizes>\n\n  private dragProgressSubject = new Subject<IOutputData>()\n  dragProgress$ = this.dragProgressSubject.asObservable()\n\n  private isDragging = false\n  private isWaitingClear = false\n  private isWaitingInitialMove = false\n  private dragListeners: Array<() => void> = []\n  private snapshot: ISplitSnapshot | null = null\n  private startPoint: IPoint | null = null\n  private endPoint: IPoint | null = null\n\n  readonly displayedAreas: Array<IArea> = []\n  private readonly hiddenAreas: Array<IArea> = []\n\n  @ViewChildren('gutterEls') private gutterEls: QueryList<ElementRef>\n\n  _clickTimeout: number | null = null\n  draggedGutterNum: number = undefined\n\n  ngAfterViewInit() {\n    this.ngZone.runOutsideAngular(() => {\n      // To avoid transition at first rendering\n      setTimeout(() => this.renderer.addClass(this.elRef.nativeElement, 'as-init'))\n    })\n  }\n\n  private getNbGutters(): number {\n    return this.displayedAreas.length === 0 ? 0 : this.displayedAreas.length - 1\n  }\n\n  addArea(component: SplitAreaDirective): void {\n    const newArea: IArea = {\n      component,\n      order: 0,\n      size: 0,\n      minSize: null,\n      maxSize: null,\n      sizeBeforeCollapse: null,\n      gutterBeforeCollapse: 0,\n    }\n\n    if (component.visible === true) {\n      this.displayedAreas.push(newArea)\n\n      this.build(true, true)\n    } else {\n      this.hiddenAreas.push(newArea)\n    }\n  }\n\n  removeArea(component: SplitAreaDirective): void {\n    if (this.displayedAreas.some((a) => a.component === component)) {\n      const area = this.displayedAreas.find((a) => a.component === component)\n      this.displayedAreas.splice(this.displayedAreas.indexOf(area), 1)\n\n      this.build(true, true)\n    } else if (this.hiddenAreas.some((a) => a.component === component)) {\n      const area = this.hiddenAreas.find((a) => a.component === component)\n      this.hiddenAreas.splice(this.hiddenAreas.indexOf(area), 1)\n    }\n  }\n\n  updateArea(component: SplitAreaDirective, resetOrders: boolean, resetSizes: boolean): void {\n    if (component.visible === true) {\n      this.build(resetOrders, resetSizes)\n    }\n  }\n\n  showArea(component: SplitAreaDirective): void {\n    const area = this.hiddenAreas.find((a) => a.component === component)\n    if (area === undefined) {\n      return\n    }\n\n    const areas = this.hiddenAreas.splice(this.hiddenAreas.indexOf(area), 1)\n    this.displayedAreas.push(...areas)\n\n    this.build(true, true)\n  }\n\n  hideArea(comp: SplitAreaDirective): void {\n    const area = this.displayedAreas.find((a) => a.component === comp)\n    if (area === undefined) {\n      return\n    }\n\n    const areas = this.displayedAreas.splice(this.displayedAreas.indexOf(area), 1)\n    areas.forEach((item) => {\n      item.order = 0\n      item.size = 0\n    })\n    this.hiddenAreas.push(...areas)\n\n    this.build(true, true)\n  }\n\n  getVisibleAreaSizes(): IOutputAreaSizes {\n    return this.displayedAreas.map((a) => a.size)\n  }\n\n  setVisibleAreaSizes(sizes: IOutputAreaSizes): boolean {\n    if (sizes.length !== this.displayedAreas.length) {\n      return false\n    }\n\n    const formattedSizes = sizes.map((s) => getInputPositiveNumber(s, '*'))\n    const isValid = isUserSizesValid(this.unit, formattedSizes)\n\n    if (isValid === false) {\n      return false\n    }\n\n    // @@ts-expect-error\n    this.displayedAreas.forEach((area, i) => (area.component.size = formattedSizes[i]))\n\n    this.build(false, true)\n    return true\n  }\n\n  private build(resetOrders: boolean, resetSizes: boolean): void {\n    this.stopDragging()\n\n    // ¤ AREAS ORDER\n\n    if (resetOrders === true) {\n      // If user provided 'order' for each area, use it to sort them.\n      if (this.displayedAreas.every((a) => a.component.order !== null)) {\n        this.displayedAreas.sort((a, b) => a.component.order - b.component.order)\n      }\n\n      // Then set real order with multiples of 2, numbers between will be used by gutters.\n      this.displayedAreas.forEach((area, i) => {\n        area.order = i * 2\n        area.component.setStyleOrder(area.order)\n      })\n    }\n\n    // ¤ AREAS SIZE\n\n    if (resetSizes === true) {\n      const useUserSizes = isUserSizesValid(\n        this.unit,\n        this.displayedAreas.map((a) => a.component.size),\n      )\n\n      switch (this.unit) {\n        case 'percent': {\n          const defaultSize = 100 / this.displayedAreas.length\n\n          this.displayedAreas.forEach((area) => {\n            area.size = useUserSizes ? area.component.size : defaultSize\n            area.minSize = getAreaMinSize(area)\n            area.maxSize = getAreaMaxSize(area)\n          })\n          break\n        }\n        case 'pixel': {\n          if (useUserSizes) {\n            this.displayedAreas.forEach((area) => {\n              area.size = area.component.size\n              area.minSize = getAreaMinSize(area)\n              area.maxSize = getAreaMaxSize(area)\n            })\n          } else {\n            const wildcardSizeAreas = this.displayedAreas.filter((a) => a.component.size === '*')\n\n            // No wildcard area > Need to select one arbitrarily > first\n            if (wildcardSizeAreas.length === 0 && this.displayedAreas.length > 0) {\n              this.displayedAreas.forEach((area, i) => {\n                area.size = i === 0 ? '*' : area.component.size\n                area.minSize = i === 0 ? area.component.minSize : getAreaMinSize(area)\n                area.maxSize = i === 0 ? null : getAreaMaxSize(area)\n              })\n            } else if (wildcardSizeAreas.length > 1) {\n              // More than one wildcard area > Need to keep only one arbitrarily > first\n              let alreadyGotOne = false\n              this.displayedAreas.forEach((area) => {\n                if (area.component.size === '*') {\n                  if (alreadyGotOne === false) {\n                    area.size = '*'\n                    area.minSize = null\n                    area.maxSize = null\n                    alreadyGotOne = true\n                  } else {\n                    area.size = 100\n                    area.minSize = null\n                    area.maxSize = null\n                  }\n                } else {\n                  area.size = area.component.size\n                  area.minSize = getAreaMinSize(area)\n                  area.maxSize = getAreaMaxSize(area)\n                }\n              })\n            }\n          }\n          break\n        }\n      }\n    }\n\n    this.refreshStyleSizes()\n    this.cdRef.markForCheck()\n  }\n\n  private refreshStyleSizes(): void {\n    ///////////////////////////////////////////\n    // PERCENT MODE\n    if (this.unit === 'percent') {\n      // Only one area > flex-basis 100%\n      if (this.displayedAreas.length === 1) {\n        this.displayedAreas[0].component.setStyleFlex(0, 0, `100%`, false, false)\n      } else {\n        // Multiple areas > use each percent basis\n        const sumGutterSize = this.getNbGutters() * this.gutterSize\n\n        this.displayedAreas.forEach((area) => {\n          // Area with wildcard size\n          if (area.size === '*') {\n            if (this.displayedAreas.length === 1) {\n              area.component.setStyleFlex(1, 1, `100%`, false, false)\n            } else {\n              area.component.setStyleFlex(1, 1, `auto`, false, false)\n            }\n          } else {\n            area.component.setStyleFlex(\n              0,\n              0,\n              `calc( ${area.size}% - ${(area.size / 100) * sumGutterSize}px )`,\n              area.minSize !== null && area.minSize === area.size,\n              area.maxSize !== null && area.maxSize === area.size,\n            )\n          }\n        })\n      }\n    } else if (this.unit === 'pixel') {\n      ///////////////////////////////////////////\n      // PIXEL MODE\n      this.displayedAreas.forEach((area) => {\n        // Area with wildcard size\n        if (area.size === '*') {\n          if (this.displayedAreas.length === 1) {\n            area.component.setStyleFlex(1, 1, `100%`, false, false)\n          } else {\n            area.component.setStyleFlex(1, 1, `auto`, false, false)\n          }\n        } else {\n          // Area with pixel size\n          // Only one area > flex-basis 100%\n          if (this.displayedAreas.length === 1) {\n            area.component.setStyleFlex(0, 0, `100%`, false, false)\n          } else {\n            // Multiple areas > use each pixel basis\n            area.component.setStyleFlex(\n              0,\n              0,\n              `${area.size}px`,\n              area.minSize !== null && area.minSize === area.size,\n              area.maxSize !== null && area.maxSize === area.size,\n            )\n          }\n        }\n      })\n    }\n  }\n\n  clickGutter(event: MouseEvent | TouchEvent, gutterNum: number): void {\n    const tempPoint = getPointFromEvent(event)\n\n    // Be sure mouseup/touchend happened if touch/cursor is not moved.\n    if (\n      this.startPoint &&\n      pointDeltaEquals(this.startPoint, tempPoint, this.gutterClickDeltaPx) &&\n      (!this.isDragging || this.isWaitingInitialMove)\n    ) {\n      // If timeout in progress and new click > clearTimeout & dblClickEvent\n      if (this._clickTimeout !== null) {\n        window.clearTimeout(this._clickTimeout)\n        this._clickTimeout = null\n        this.notify('dblclick', gutterNum)\n        this.stopDragging()\n      } else {\n        // Else start timeout to call clickEvent at end\n        this._clickTimeout = window.setTimeout(() => {\n          this._clickTimeout = null\n          this.notify('click', gutterNum)\n          this.stopDragging()\n        }, this.gutterDblClickDuration)\n      }\n    }\n  }\n\n  startKeyboardDrag(event: KeyboardEvent, gutterOrder: number, gutterNum: number) {\n    if (this.disabled === true || this.isWaitingClear === true) {\n      return\n    }\n\n    const endPoint = getKeyboardEndpoint(event, this.direction)\n    if (endPoint === null) {\n      return\n    }\n    this.endPoint = endPoint\n    this.startPoint = getPointFromEvent(event)\n\n    event.preventDefault()\n    event.stopPropagation()\n\n    this.setupForDragEvent(gutterOrder, gutterNum)\n    this.startDragging()\n    this.drag()\n    this.stopDragging()\n  }\n\n  startMouseDrag(event: MouseEvent | TouchEvent, gutterOrder: number, gutterNum: number): void {\n    if (this.customGutter && !this.customGutter.canStartDragging(event.target as HTMLElement, gutterNum)) {\n      return\n    }\n\n    event.preventDefault()\n    event.stopPropagation()\n\n    this.startPoint = getPointFromEvent(event)\n    if (this.startPoint === null || this.disabled === true || this.isWaitingClear === true) {\n      return\n    }\n\n    this.setupForDragEvent(gutterOrder, gutterNum)\n\n    this.dragListeners.push(this.renderer.listen('document', 'mouseup', this.stopDragging.bind(this)))\n    this.dragListeners.push(this.renderer.listen('document', 'touchend', this.stopDragging.bind(this)))\n    this.dragListeners.push(this.renderer.listen('document', 'touchcancel', this.stopDragging.bind(this)))\n\n    this.ngZone.runOutsideAngular(() => {\n      this.dragListeners.push(this.renderer.listen('document', 'mousemove', this.mouseDragEvent.bind(this)))\n      this.dragListeners.push(this.renderer.listen('document', 'touchmove', this.mouseDragEvent.bind(this)))\n    })\n\n    this.startDragging()\n  }\n\n  private setupForDragEvent(gutterOrder: number, gutterNum: number) {\n    this.snapshot = {\n      gutterNum,\n      lastSteppedOffset: 0,\n      allAreasSizePixel: getElementPixelSize(this.elRef, this.direction) - this.getNbGutters() * this.gutterSize,\n      allInvolvedAreasSizePercent: 100,\n      areasBeforeGutter: [],\n      areasAfterGutter: [],\n    }\n\n    this.displayedAreas.forEach((area) => {\n      const areaSnapshot: IAreaSnapshot = {\n        area,\n        sizePixelAtStart: getElementPixelSize(area.component.elRef, this.direction),\n        sizePercentAtStart: this.unit === 'percent' ? area.size : -1, // If pixel mode, anyway, will not be used.\n      }\n\n      if (area.order < gutterOrder) {\n        if (this.restrictMove === true) {\n          this.snapshot.areasBeforeGutter = [areaSnapshot]\n        } else {\n          this.snapshot.areasBeforeGutter.unshift(areaSnapshot)\n        }\n      } else if (area.order > gutterOrder) {\n        if (this.restrictMove === true) {\n          if (this.snapshot.areasAfterGutter.length === 0) {\n            this.snapshot.areasAfterGutter = [areaSnapshot]\n          }\n        } else {\n          this.snapshot.areasAfterGutter.push(areaSnapshot)\n        }\n      }\n    })\n\n    // allInvolvedAreasSizePercent is only relevant if there is restrictMove as otherwise the sum\n    // is always 100.\n    // Pixel mode doesn't have browser % problem which is the origin of allInvolvedAreasSizePercent.\n    if (this.restrictMove && this.unit === 'percent') {\n      const areaSnapshotBefore = this.snapshot.areasBeforeGutter[0]\n      const areaSnapshotAfter = this.snapshot.areasAfterGutter[0]\n\n      // We have a wildcard size area beside the dragged gutter.\n      // In this case we can only calculate the size based on the move restricted areas.\n      if (areaSnapshotBefore.area.size === '*' || areaSnapshotAfter.area.size === '*') {\n        const notInvolvedAreasSizesPercent = this.displayedAreas.reduce((accum, area) => {\n          if (areaSnapshotBefore.area !== area && areaSnapshotAfter.area !== area) {\n            return accum + (area.size as number)\n          }\n\n          return accum\n        }, 0)\n\n        this.snapshot.allInvolvedAreasSizePercent = 100 - notInvolvedAreasSizesPercent\n      } else {\n        // No wildcard or not beside the gutter - we can just sum the areas beside gutter percents.\n        this.snapshot.allInvolvedAreasSizePercent = [\n          ...this.snapshot.areasBeforeGutter,\n          ...this.snapshot.areasAfterGutter,\n        ].reduce((t, a) => t + (a.sizePercentAtStart as number), 0)\n      }\n    }\n\n    if (this.snapshot.areasBeforeGutter.length === 0 || this.snapshot.areasAfterGutter.length === 0) {\n      return\n    }\n  }\n\n  private startDragging() {\n    this.displayedAreas.forEach((area) => area.component.lockEvents())\n\n    this.isDragging = true\n    this.isWaitingInitialMove = true\n  }\n\n  private mouseDragEvent(event: MouseEvent | TouchEvent): void {\n    event.preventDefault()\n    event.stopPropagation()\n\n    const tempPoint = getPointFromEvent(event)\n    if (this._clickTimeout !== null && !pointDeltaEquals(this.startPoint, tempPoint, this.gutterClickDeltaPx)) {\n      window.clearTimeout(this._clickTimeout)\n      this._clickTimeout = null\n    }\n\n    if (this.isDragging === false) {\n      return\n    }\n\n    this.endPoint = getPointFromEvent(event)\n    if (this.endPoint === null) {\n      return\n    }\n\n    this.drag()\n  }\n\n  private drag() {\n    if (this.isWaitingInitialMove) {\n      if (this.startPoint.x !== this.endPoint.x || this.startPoint.y !== this.endPoint.y) {\n        this.ngZone.run(() => {\n          this.isWaitingInitialMove = false\n\n          this.renderer.addClass(this.elRef.nativeElement, 'as-dragging')\n          this.draggedGutterNum = this.snapshot.gutterNum\n          this.cdRef.markForCheck()\n\n          this.notify('start', this.snapshot.gutterNum)\n        })\n      } else {\n        return\n      }\n    }\n\n    // Calculate steppedOffset\n\n    let offset =\n      this.direction === 'horizontal' ? this.startPoint.x - this.endPoint.x : this.startPoint.y - this.endPoint.y\n\n    // RTL requires negative offset only in horizontal mode as in vertical\n    // RTL has no effect on drag direction.\n    if (this.dir === 'rtl' && this.direction === 'horizontal') {\n      offset = -offset\n    }\n\n    const steppedOffset = Math.round(offset / this.gutterStep) * this.gutterStep\n\n    if (steppedOffset === this.snapshot.lastSteppedOffset) {\n      return\n    }\n\n    this.snapshot.lastSteppedOffset = steppedOffset\n\n    // Need to know if each gutter side areas could reacts to steppedOffset\n\n    let areasBefore = getGutterSideAbsorptionCapacity(\n      this.unit,\n      this.snapshot.areasBeforeGutter,\n      -steppedOffset,\n      this.snapshot.allAreasSizePixel,\n    )\n    let areasAfter = getGutterSideAbsorptionCapacity(\n      this.unit,\n      this.snapshot.areasAfterGutter,\n      steppedOffset,\n      this.snapshot.allAreasSizePixel,\n    )\n\n    // Each gutter side areas can't absorb all offset\n    if (areasBefore.remain !== 0 && areasAfter.remain !== 0) {\n      // TODO: fix this emty block\n      if (Math.abs(areasBefore.remain) === Math.abs(areasAfter.remain)) {\n        /* empty */\n      } else if (Math.abs(areasBefore.remain) > Math.abs(areasAfter.remain)) {\n        areasAfter = getGutterSideAbsorptionCapacity(\n          this.unit,\n          this.snapshot.areasAfterGutter,\n          steppedOffset + areasBefore.remain,\n          this.snapshot.allAreasSizePixel,\n        )\n      } else {\n        areasBefore = getGutterSideAbsorptionCapacity(\n          this.unit,\n          this.snapshot.areasBeforeGutter,\n          -(steppedOffset - areasAfter.remain),\n          this.snapshot.allAreasSizePixel,\n        )\n      }\n    } else if (areasBefore.remain !== 0) {\n      // Areas before gutter can't absorbs all offset > need to recalculate sizes for areas after gutter.\n      areasAfter = getGutterSideAbsorptionCapacity(\n        this.unit,\n        this.snapshot.areasAfterGutter,\n        steppedOffset + areasBefore.remain,\n        this.snapshot.allAreasSizePixel,\n      )\n    } else if (areasAfter.remain !== 0) {\n      // Areas after gutter can't absorbs all offset > need to recalculate sizes for areas before gutter.\n      areasBefore = getGutterSideAbsorptionCapacity(\n        this.unit,\n        this.snapshot.areasBeforeGutter,\n        -(steppedOffset - areasAfter.remain),\n        this.snapshot.allAreasSizePixel,\n      )\n    }\n\n    if (this.unit === 'percent') {\n      // Hack because of browser messing up with sizes using calc(X% - Ypx) -> el.getBoundingClientRect()\n      // If not there, playing with gutters makes total going down to 99.99875% then 99.99286%, 99.98986%,..\n      const all = [...areasBefore.list, ...areasAfter.list]\n      const wildcardArea = all.find((a) => a.percentAfterAbsorption === '*')\n      // In case we have a wildcard area - always align the percents on the wildcard area.\n      const areaToReset =\n        wildcardArea ??\n        all.find(\n          (a) =>\n            a.percentAfterAbsorption !== 0 &&\n            a.percentAfterAbsorption !== a.areaSnapshot.area.minSize &&\n            a.percentAfterAbsorption !== a.areaSnapshot.area.maxSize,\n        )\n\n      if (areaToReset) {\n        areaToReset.percentAfterAbsorption =\n          this.snapshot.allInvolvedAreasSizePercent -\n          all.filter((a) => a !== areaToReset).reduce((total, a) => total + (a.percentAfterAbsorption as number), 0)\n      }\n    }\n\n    // Now we know areas could absorb steppedOffset, time to really update sizes\n\n    areasBefore.list.forEach((item) => updateAreaSize(this.unit, item))\n    areasAfter.list.forEach((item) => updateAreaSize(this.unit, item))\n\n    this.refreshStyleSizes()\n    this.notify('progress', this.snapshot.gutterNum)\n  }\n\n  private stopDragging(event?: Event): void {\n    if (event) {\n      event.preventDefault()\n      event.stopPropagation()\n    }\n\n    if (this.isDragging === false) {\n      return\n    }\n\n    this.displayedAreas.forEach((area) => area.component.unlockEvents())\n\n    while (this.dragListeners.length > 0) {\n      const fct = this.dragListeners.pop()\n      if (fct) {\n        fct()\n      }\n    }\n\n    // Warning: Have to be before \"notify('end')\"\n    // because \"notify('end')\"\" can be linked to \"[size]='x'\" > \"build()\" > \"stopDragging()\"\n    this.isDragging = false\n\n    // If moved from starting point, notify end\n    if (this.isWaitingInitialMove === false) {\n      this.notify('end', this.snapshot.gutterNum)\n    }\n\n    this.renderer.removeClass(this.elRef.nativeElement, 'as-dragging')\n    this.draggedGutterNum = undefined\n    this.cdRef.markForCheck()\n\n    this.snapshot = null\n    this.isWaitingClear = true\n\n    // Needed to let (click)=\"clickGutter(...)\" event run and verify if mouse moved or not\n    this.ngZone.runOutsideAngular(() => {\n      setTimeout(() => {\n        this.startPoint = null\n        this.endPoint = null\n        this.isWaitingClear = false\n      })\n    })\n  }\n\n  notify(type: 'start' | 'progress' | 'end' | 'click' | 'dblclick' | 'transitionEnd', gutterNum: number): void {\n    const sizes = this.getVisibleAreaSizes()\n\n    if (type === 'start') {\n      this.dragStart.emit({ gutterNum, sizes })\n    } else if (type === 'end') {\n      this.dragEnd.emit({ gutterNum, sizes })\n    } else if (type === 'click') {\n      this.gutterClick.emit({ gutterNum, sizes })\n    } else if (type === 'dblclick') {\n      this.gutterDblClick.emit({ gutterNum, sizes })\n    } else if (type === 'transitionEnd') {\n      if (this.transitionEndSubscriber) {\n        this.ngZone.run(() => this.transitionEndSubscriber.next(sizes))\n      }\n    } else if (type === 'progress') {\n      // Stay outside zone to allow users do what they want about change detection mechanism.\n      this.dragProgressSubject.next({ gutterNum, sizes })\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.stopDragging()\n  }\n\n  collapseArea(comp: SplitAreaDirective, newSize: number, gutter: 'left' | 'right'): void {\n    const area = this.displayedAreas.find((a) => a.component === comp)\n    if (area === undefined) {\n      return\n    }\n    const whichGutter = gutter === 'right' ? 1 : -1\n    if (!area.sizeBeforeCollapse) {\n      area.sizeBeforeCollapse = area.size\n      area.gutterBeforeCollapse = whichGutter\n    }\n    area.size = newSize\n    const gtr = this.gutterEls.find((f) => f.nativeElement.style.order === `${area.order + whichGutter}`)\n    if (gtr) {\n      this.renderer.addClass(gtr.nativeElement, 'as-split-gutter-collapsed')\n    }\n    this.updateArea(comp, false, false)\n  }\n\n  expandArea(comp: SplitAreaDirective): void {\n    const area = this.displayedAreas.find((a) => a.component === comp)\n    if (area === undefined) {\n      return\n    }\n    if (!area.sizeBeforeCollapse) {\n      return\n    }\n    area.size = area.sizeBeforeCollapse\n    area.sizeBeforeCollapse = null\n    const gtr = this.gutterEls.find((f) => f.nativeElement.style.order === `${area.order + area.gutterBeforeCollapse}`)\n    if (gtr) {\n      this.renderer.removeClass(gtr.nativeElement, 'as-split-gutter-collapsed')\n    }\n    this.updateArea(comp, false, false)\n  }\n\n  getAriaAreaSizeText(size: IAreaSize): string {\n    if (size === '*') {\n      return null\n    }\n\n    return size.toFixed(0) + ' ' + this.unit\n  }\n}\n","import { Directive, ElementRef, Input, NgZone, OnDestroy, OnInit, Renderer2 } from '@angular/core'\nimport { Subscription } from 'rxjs'\nimport { SplitComponent } from '../component/split.component'\nimport { getInputBoolean, getInputPositiveNumber } from '../utils'\nimport { IAreaSize } from '../interface'\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: 'as-split-area, [as-split-area]',\n  exportAs: 'asSplitArea',\n})\nexport class SplitAreaDirective implements OnInit, OnDestroy {\n  private _order: number | null = null\n\n  @Input() set order(v: number | `${number}` | null | undefined) {\n    this._order = getInputPositiveNumber(v, null)\n\n    this.split.updateArea(this, true, false)\n  }\n\n  get order(): number | null {\n    return this._order\n  }\n\n  private _size: IAreaSize = '*'\n\n  @Input() set size(v: IAreaSize | `${number}` | null | undefined) {\n    this._size = getInputPositiveNumber(v, '*')\n\n    this.split.updateArea(this, false, true)\n  }\n\n  get size(): IAreaSize {\n    return this._size\n  }\n\n  private _minSize: number | null = null\n\n  @Input() set minSize(v: number | `${number}` | null | undefined) {\n    this._minSize = getInputPositiveNumber(v, null)\n\n    this.split.updateArea(this, false, true)\n  }\n\n  get minSize(): number | null {\n    return this._minSize\n  }\n\n  private _maxSize: number | null = null\n\n  @Input() set maxSize(v: number | `${number}` | null | undefined) {\n    this._maxSize = getInputPositiveNumber(v, null)\n\n    this.split.updateArea(this, false, true)\n  }\n\n  get maxSize(): number | null {\n    return this._maxSize\n  }\n\n  private _lockSize = false\n\n  @Input() set lockSize(v: boolean | `${boolean}`) {\n    this._lockSize = getInputBoolean(v)\n\n    this.split.updateArea(this, false, true)\n  }\n\n  get lockSize(): boolean {\n    return this._lockSize\n  }\n\n  private _visible = true\n\n  @Input() set visible(v: boolean | `${boolean}`) {\n    this._visible = getInputBoolean(v)\n\n    if (this._visible) {\n      this.split.showArea(this)\n      this.renderer.removeClass(this.elRef.nativeElement, 'as-hidden')\n    } else {\n      this.split.hideArea(this)\n      this.renderer.addClass(this.elRef.nativeElement, 'as-hidden')\n    }\n  }\n\n  get visible(): boolean {\n    return this._visible\n  }\n\n  private transitionListener: () => void\n  private dragStartSubscription: Subscription\n  private dragEndSubscription: Subscription\n  private readonly lockListeners: Array<() => void> = []\n\n  constructor(\n    private ngZone: NgZone,\n    private renderer: Renderer2,\n    private split: SplitComponent,\n    readonly elRef: ElementRef,\n  ) {\n    this.renderer.addClass(this.elRef.nativeElement, 'as-split-area')\n  }\n\n  ngOnInit(): void {\n    this.split.addArea(this)\n\n    this.ngZone.runOutsideAngular(() => {\n      this.transitionListener = this.renderer.listen(\n        this.elRef.nativeElement,\n        'transitionend',\n        (event: TransitionEvent) => {\n          // Limit only flex-basis transition to trigger the event\n          if (event.propertyName === 'flex-basis') {\n            this.split.notify('transitionEnd', -1)\n          }\n        },\n      )\n    })\n\n    const iframeFixDiv = this.renderer.createElement('div')\n    this.renderer.addClass(iframeFixDiv, 'iframe-fix')\n\n    this.dragStartSubscription = this.split.dragStart.subscribe(() => {\n      this.renderer.setStyle(this.elRef.nativeElement, 'position', 'relative')\n      this.renderer.appendChild(this.elRef.nativeElement, iframeFixDiv)\n    })\n\n    this.dragEndSubscription = this.split.dragEnd.subscribe(() => {\n      this.renderer.removeStyle(this.elRef.nativeElement, 'position')\n      this.renderer.removeChild(this.elRef.nativeElement, iframeFixDiv)\n    })\n  }\n\n  setStyleOrder(value: number): void {\n    this.renderer.setStyle(this.elRef.nativeElement, 'order', value)\n  }\n\n  setStyleFlex(grow: number, shrink: number, basis: string, isMin: boolean, isMax: boolean): void {\n    // Need 3 separated properties to work on IE11 (https://github.com/angular/flex-layout/issues/323)\n    this.renderer.setStyle(this.elRef.nativeElement, 'flex-grow', grow)\n    this.renderer.setStyle(this.elRef.nativeElement, 'flex-shrink', shrink)\n    this.renderer.setStyle(this.elRef.nativeElement, 'flex-basis', basis)\n\n    if (isMin === true) {\n      this.renderer.addClass(this.elRef.nativeElement, 'as-min')\n    } else {\n      this.renderer.removeClass(this.elRef.nativeElement, 'as-min')\n    }\n\n    if (isMax === true) {\n      this.renderer.addClass(this.elRef.nativeElement, 'as-max')\n    } else {\n      this.renderer.removeClass(this.elRef.nativeElement, 'as-max')\n    }\n  }\n\n  lockEvents(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.lockListeners.push(this.renderer.listen(this.elRef.nativeElement, 'selectstart', () => false))\n      this.lockListeners.push(this.renderer.listen(this.elRef.nativeElement, 'dragstart', () => false))\n    })\n  }\n\n  unlockEvents(): void {\n    while (this.lockListeners.length > 0) {\n      const fct = this.lockListeners.pop()\n      if (fct) {\n        fct()\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.unlockEvents()\n\n    if (this.transitionListener) {\n      this.transitionListener()\n    }\n\n    this.dragStartSubscription?.unsubscribe()\n    this.dragEndSubscription?.unsubscribe()\n\n    this.split.removeArea(this)\n  }\n\n  collapse(newSize = 0, gutter: 'left' | 'right' = 'right'): void {\n    this.split.collapseArea(this, newSize, gutter)\n  }\n\n  expand(): void {\n    this.split.expandArea(this)\n  }\n}\n","import { Directive, OnInit, OnDestroy, Inject, ElementRef } from '@angular/core'\nimport { SplitGutterDirective } from './split-gutter.directive'\nimport { GUTTER_NUM_TOKEN } from './gutter-num-token'\n\n@Directive({\n  selector: '[asSplitGutterDragHandle]',\n})\nexport class SplitGutterDragHandleDirective implements OnInit, OnDestroy {\n  constructor(\n    @Inject(GUTTER_NUM_TOKEN) private gutterNum: number,\n    private elementRef: ElementRef<HTMLElement>,\n    private gutterDir: SplitGutterDirective,\n  ) {}\n\n  ngOnInit(): void {\n    this.gutterDir.addToMap(this.gutterDir.gutterToHandleElementMap, this.gutterNum, this.elementRef)\n  }\n\n  ngOnDestroy(): void {\n    this.gutterDir.removedFromMap(this.gutterDir.gutterToHandleElementMap, this.gutterNum, this.elementRef)\n  }\n}\n","import { Directive, OnInit, OnDestroy, Inject, ElementRef } from '@angular/core'\nimport { SplitGutterDirective } from './split-gutter.directive'\nimport { GUTTER_NUM_TOKEN } from './gutter-num-token'\n\n@Directive({\n  selector: '[asSplitGutterExcludeFromDrag]',\n})\nexport class SplitGutterExcludeFromDragDirective implements OnInit, OnDestroy {\n  constructor(\n    @Inject(GUTTER_NUM_TOKEN) private gutterNum: number,\n    private elementRef: ElementRef<HTMLElement>,\n    private gutterDir: SplitGutterDirective,\n  ) {}\n\n  ngOnInit(): void {\n    this.gutterDir.addToMap(this.gutterDir.gutterToExcludeDragElementMap, this.gutterNum, this.elementRef)\n  }\n\n  ngOnDestroy(): void {\n    this.gutterDir.removedFromMap(this.gutterDir.gutterToExcludeDragElementMap, this.gutterNum, this.elementRef)\n  }\n}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { SplitComponent } from './component/split.component'\nimport { SplitAreaDirective } from './directive/split-area.directive'\nimport { SplitGutterDirective } from './gutter/split-gutter.directive'\nimport { SplitGutterDragHandleDirective } from './gutter/split-gutter-drag-handle.directive'\nimport { SplitGutterDynamicInjectorDirective } from './gutter/split-gutter-dynamic-injector.directive'\nimport { SplitGutterExcludeFromDragDirective } from './gutter/split-gutter-exclude-from-drag.directive'\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    SplitComponent,\n    SplitAreaDirective,\n    SplitGutterDirective,\n    SplitGutterDragHandleDirective,\n    SplitGutterDynamicInjectorDirective,\n    SplitGutterExcludeFromDragDirective,\n  ],\n  exports: [\n    SplitComponent,\n    SplitAreaDirective,\n    SplitGutterDirective,\n    SplitGutterDragHandleDirective,\n    SplitGutterExcludeFromDragDirective,\n  ],\n})\nexport class AngularSplitModule {}\n","/*\n * Public API Surface of angular-split\n */\n\nexport { AngularSplitModule } from './lib/module'\nexport { SplitComponent } from './lib/component/split.component'\nexport { SplitGutterDirective, SplitGutterTemplateContext } from './lib/gutter/split-gutter.directive'\nexport { SplitGutterDragHandleDirective } from './lib/gutter/split-gutter-drag-handle.directive'\nexport { SplitGutterExcludeFromDragDirective } from './lib/gutter/split-gutter-exclude-from-drag.directive'\nexport { SplitAreaDirective } from './lib/directive/split-area.directive'\nexport { ANGULAR_SPLIT_DEFAULT_OPTIONS } from './lib/angular-split-config.token'\nexport * from './lib/interface'\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i2.SplitGutterDynamicInjectorDirective","i1.SplitComponent","i1.SplitGutterDirective"],"mappings":"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"}